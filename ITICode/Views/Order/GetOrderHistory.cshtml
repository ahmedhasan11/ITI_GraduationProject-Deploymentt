@model IEnumerable<ITI_Hackathon.ServiceContracts.DTO.OrderDto>

@{
    ViewData["Title"] = "My Orders";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    :root {
        --primary-color: #2a7de1;
        --primary-dark: #1c65c1;
        --secondary-color: #3bbab5;
        --accent-color: #ff6b6b;
        --light-bg: #f0f7ff;
        --light-border: #d0e5ff;
        --dark-text: #1a365d;
        --light-text: #4a5568;
        --medical-gradient: linear-gradient(135deg, #2a7de1, #3bbab5, #4cd1c4);
        --shadow-sm: 0 4px 6px rgba(0, 0, 0, 0.05);
        --shadow-md: 0 6px 12px rgba(0, 0, 0, 0.08);
        --shadow-lg: 0 15px 35px rgba(0, 0, 0, 0.1);
        --transition: all 0.3s ease;
        --footer-bg: #0f172a;
        --footer-color: #e2e8f0;
    }

    body {
        font-family: 'Segoe UI', 'Public Sans', sans-serif;
        background: var(--light-bg);
        color: var(--dark-text);
        overflow-x: hidden;
        padding-bottom: 2rem;
    }

    .medical-header {
        background: var(--medical-gradient);
        color: white;
        padding: 1.5rem 0;
        margin-bottom: 2rem;
        box-shadow: var(--shadow-md);
    }

    .page-title {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        font-weight: 700;
        margin: 0;
    }

    .orders-container {
        background: white;
        border-radius: 12px;
        box-shadow: var(--shadow-sm);
        padding: 2rem;
        margin-bottom: 2rem;
    }

    .no-orders {
        text-align: center;
        padding: 3rem;
        background: var(--light-bg);
        border-radius: 12px;
        color: var(--light-text);
    }

        .no-orders i {
            font-size: 3rem;
            margin-bottom: 1rem;
            display: block;
            color: var(--primary-color);
        }

    .order-card {
        border: 1px solid var(--light-border);
        border-radius: 10px;
        margin-bottom: 1.5rem;
        overflow: hidden;
        transition: var(--transition);
        background: white;
    }

        .order-card:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-md);
        }

    .order-header {
        background: var(--light-bg);
        padding: 1rem 1.5rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 1px solid var(--light-border);
    }

    .order-id {
        font-weight: 700;
        color: var(--dark-text);
        font-size: 1.1rem;
    }

    .order-date {
        color: var(--light-text);
        font-size: 0.9rem;
    }

    .order-body {
        padding: 1.5rem;
    }

    .order-details {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .detail-item strong {
        color: var(--dark-text);
        display: block;
        margin-bottom: 0.25rem;
        font-size: 0.9rem;
    }

    .detail-item span {
        color: var(--light-text);
    }

    .status-badge {
        padding: 0.5rem 1rem;
        border-radius: 50px;
        font-weight: 600;
        font-size: 0.85rem;
        display: inline-block;
    }

    .status-completed {
        background: rgba(40, 167, 69, 0.15);
        color: #28a745;
    }

    .status-pending {
        background: rgba(255, 193, 7, 0.15);
        color: #ffc107;
    }

    .status-cancelled {
        background: rgba(220, 53, 69, 0.15);
        color: #dc3545;
    }

    .status-other {
        background: rgba(108, 117, 125, 0.15);
        color: #6c757d;
    }

    .medicines-list {
        background: var(--light-bg);
        border-radius: 8px;
        padding: 1rem;
        margin-top: 1rem;
    }

    .medicine-item {
        display: flex;
        justify-content: space-between;
        padding: 0.5rem 0;
        border-bottom: 1px solid var(--light-border);
    }

        .medicine-item:last-child {
            border-bottom: none;
        }



    @@media (max-width: 768px) {
        .order-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }

        .order-details {
            grid-template-columns: 1fr;
            gap: 1rem;
        }

        .order-actions {
            flex-direction: column;
        }

        .filter-options {
            flex-direction: column;
            gap: 0.5rem;
        }
    }
</style>
<style>
    .Empty {
        width: 100%;
        height: 80px;
    }
</style>

<div class="Empty"></div>
<div class="medical-header">
    <div class="container">
        <h1 class="page-title"><i class="bi bi-bag-check-fill"></i> My Orders</h1>
    </div>
</div>

<div class="container">

    <div class="orders-container">
        @if (Model == null || !Model.Any())
        {
            <div class="no-orders">
                <i class="bi bi-info-circle"></i>
                <h3>You don't have any orders yet.</h3>
                <p class="mt-2">Once you place an order, it will appear here.</p>
                <a href="#" class="btn btn-medical mt-3">Browse Medicines</a>
            </div>
        }
        else
        {
            <div class="orders-list">
                @foreach (var order in Model)
                {
                    <div class="order-card">
                        <div class="order-header">
                            <div>
                                <div class="order-id">Order #@order.OrderId</div>
                                <div class="order-date">Placed on @order.CreatedAt.ToString("MMMM dd, yyyy 'at' hh:mm tt")</div>
                            </div>
                            <div>
                                @if (order.Status == "Completed")
                                {
                                    <span class="status-badge status-completed"><i class="bi bi-check-circle-fill"></i> @order.Status</span>
                                }
                                else if (order.Status == "Pending")
                                {
                                    <span class="status-badge status-pending"><i class="bi bi-clock-fill"></i> @order.Status</span>
                                }
                                else if (order.Status == "Cancelled")
                                {
                                    <span class="status-badge status-cancelled"><i class="bi bi-x-circle-fill"></i> @order.Status</span>
                                }
                                else
                                {
                                    <span class="status-badge status-other">@order.Status</span>
                                }
                            </div>
                        </div>

                        <div class="order-body">
                            <div class="order-details">
                                <div class="detail-item">
                                    <strong>Total Amount</strong>
                                    <span>@order.Total.ToString("C")</span>
                                </div>
                                <div class="detail-item">
                                    <strong>Payment Method</strong>
                                    <span>Credit Card</span>
                                </div>
                                <div class="detail-item">
                                    <strong>Delivery Address</strong>
                                    <span>123 Medical Ave, Health City</span>
                                </div>
                            </div>

                            <h6>Medicines Ordered:</h6>
                            <div class="medicines-list">
                                @if (order.Items != null && order.Items.Any())
                                {
                                    @foreach (var item in order.Items)
                                    {
                                        <div class="medicine-item">
                                            <div>@item.MedicineName</div>
                                            <div class="text-muted">x@(item.Quantity) • @((item.UnitPrice).ToString("C"))</div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="text-center text-muted py-2">No items in this order</div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Filter functionality
        const filterButtons = document.querySelectorAll('.filter-btn');

        filterButtons.forEach(button => {
            button.addEventListener('click', function() {
                // Remove active class from all buttons
                filterButtons.forEach(btn => btn.classList.remove('active'));

                // Add active class to clicked button
                this.classList.add('active');

                // In a real application, you would filter the orders here
                // This is just a visual demonstration
                const filterValue = this.textContent.trim();
                console.log('Filtering by:', filterValue);
            });
        });

        // Simulate order card click for details (would navigate to order detail page)
        const orderCards = document.querySelectorAll('.order-card');
        orderCards.forEach(card => {
            card.addEventListener('click', function(e) {
                // Don't trigger if clicking on buttons specifically
                if (!e.target.closest('.btn')) {
                    console.log('Navigating to order details');
                    // window.location.href = /Orders/Details/${orderId};
                }
            });
        });
    });
</script>