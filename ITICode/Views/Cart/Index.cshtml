@using ITI_Hackathon.ServiceContracts.DTO
@model List<CartItemDto>
@{
    ViewData["Title"] = "Shopping Cart";
    Layout = "~/Views/Shared/_Layout.cshtml";
    decimal subTotal = Model.Sum(m => m.UnitPrice * m.Quantity);
    decimal deliveryFee = 15.00m;
    decimal discount = 10.00m;
    decimal total = subTotal + deliveryFee - discount;
}

<style>
    :root {
        --primary-color: #2a7de1;
        --primary-dark: #1a5bbd;
        --secondary-color: #3bbab5;
        --accent-color: #ff6b6b;
        --light-bg: #f8fafc;
        --light-border: #e2e8f0;
        --dark-text: #1e293b;
        --light-text: #64748b;
        --success-color: #10b981;
    }

    .cart-container {
        padding: 100px 0 50px;
        background-color: #f9fafb;
        min-height: 70vh;
    }

    .cart-header {
        text-align: center;
        margin-bottom: 30px;
        padding: 20px;
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
        border-radius: 12px;
        color: white;
    }

        .cart-header h2 {
            font-weight: 700;
            margin-bottom: 10px;
        }

    .cart-table {
        background: #fff;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(0,0,0,0.05);
        margin-bottom: 20px;
    }

        .cart-table th {
            background: var(--primary-color);
            color: #fff;
            text-align: center;
            padding: 15px;
            font-weight: 600;
        }

        .cart-table td {
            vertical-align: middle;
            text-align: center;
            padding: 20px 15px;
            border-top: 1px solid var(--light-border);
        }

        .cart-table tbody tr:hover {
            background-color: rgba(42, 125, 225, 0.03);
        }

    .cart-item {
        display: flex;
        align-items: center;
    }

        .cart-item img {
            width: 70px;
            height: 70px;
            object-fit: cover;
            border-radius: 8px;
            margin-right: 15px;
            box-shadow: 0 3px 8px rgba(0,0,0,0.1);
        }

    .cart-item-info {
        text-align: left;
    }

    .cart-item-name {
        font-weight: 700;
        color: var(--dark-text);
        margin-bottom: 5px;
    }

    .cart-item-category {
        font-size: 0.85rem;
        color: var(--light-text);
        background: var(--light-bg);
        padding: 3px 10px;
        border-radius: 15px;
        display: inline-block;
    }

    .price-text {
        font-weight: 700;
        color: var(--primary-color);
        font-size: 1.1rem;
    }

    .quantity-control {
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .quantity-control button {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            border: 1px solid var(--light-border);
            background: #fff;
            color: var(--primary-color);
            font-weight: bold;
            transition: all 0.2s;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .quantity-control button:hover {
                background: var(--primary-color);
                color: #fff;
                transform: scale(1.05);
            }

        .quantity-control input {
            width: 50px;
            text-align: center;
            border: 1px solid var(--light-border);
            margin: 0 8px;
            border-radius: 8px;
            padding: 5px;
            font-weight: 600;
        }

    .remove-form {
        display: inline;
    }

    .remove-btn {
        background: transparent;
        border: none;
        color: var(--accent-color);
        font-size: 1.2rem;
        transition: all 0.2s;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .remove-btn:hover {
            background: rgba(255, 107, 107, 0.1);
            color: darkred;
        }

    .summary-card {
        background: #fff;
        padding: 25px;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.05);
        position: sticky;
        top: 100px;
    }

        .summary-card h4 {
            font-weight: 700;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 2px solid var(--light-border);
            color: var(--dark-text);
        }

    .summary-item {
        display: flex;
        justify-content: space-between;
        margin-bottom: 12px;
        padding: 5px 0;
    }

    .summary-total {
        display: flex;
        justify-content: space-between;
        font-weight: 700;
        margin-top: 15px;
        padding-top: 15px;
        border-top: 2px dashed var(--light-border);
        color: var(--primary-color);
        font-size: 1.2rem;
    }

    .checkout-btn {
        width: 100%;
        margin-top: 20px;
        padding: 14px;
        border: none;
        border-radius: 10px;
        background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
        color: #fff;
        font-weight: 600;
        transition: all 0.3s;
        box-shadow: 0 4px 10px rgba(42, 125, 225, 0.3);
    }

        .checkout-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(42, 125, 225, 0.4);
        }

    .secure-text {
        margin-top: 15px;
        font-size: 0.9rem;
        color: var(--light-text);
        text-align: center;
    }

    .empty-cart {
        text-align: center;
        padding: 60px 20px;
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.05);
    }

        .empty-cart i {
            font-size: 4rem;
            color: var(--primary-color);
            margin-bottom: 20px;
            opacity: 0.7;
        }

        .empty-cart h4 {
            font-weight: 700;
            color: var(--dark-text);
            margin-bottom: 10px;
        }

        .empty-cart p {
            color: var(--light-text);
            margin-bottom: 25px;
        }

    .features-row {
        margin-top: 50px;
    }

    .feature-card {
        text-align: center;
        padding: 25px 15px;
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.05);
        transition: all 0.3s;
        height: 100%;
    }

        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.1);
        }

        .feature-card i {
            font-size: 2.5rem;
            color: var(--primary-color);
            margin-bottom: 15px;
        }

        .feature-card h6 {
            font-weight: 700;
            color: var(--dark-text);
            margin-bottom: 10px;
        }

        .feature-card p {
            color: var(--light-text);
            font-size: 0.9rem;
        }

    .continue-shopping {
        transition: all 0.3s;
    }

        .continue-shopping:hover {
            transform: translateX(-5px);
        }

    @@media (max-width: 768px) {
        .cart-item {
            flex-direction: column;
            text-align: center;
        }

            .cart-item img {
                margin-right: 0;
                margin-bottom: 10px;
            }

        .quantity-control {
            flex-wrap: wrap;
            justify-content: center;
        }

            .quantity-control input {
                margin: 10px 0;
                width: 100%;
            }
    }
</style>

<div class="cart-container">
    <div class="container">
        <div class="cart-header">
            <h2><i class="fas fa-shopping-cart me-2"></i> Shopping Cart</h2>
            <p>Products added to your shopping cart</p>
        </div>

        @if (Model.Any())
        {
            <div class="row">
                <div class="col-lg-8 mb-4">
                    <table class="table cart-table">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Total</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr id="row-@item.MedicineId">
                                    <td>
                                        <div class="cart-item">
                                            <img src="@item.ImageUrl" alt="@item.MedicineName" onerror="this.src='https://via.placeholder.com/70x70/2a7de1/ffffff?text=Medicine'" />
                                            <div class="cart-item-info">
                                                <div class="cart-item-name">@item.MedicineName</div>
                                                <div class="cart-item-category">Category</div>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="price-text" id="price-@item.MedicineId">@item.UnitPrice.ToString("C")</span>
                                    </td>
                                    <td>
                                        <div class="quantity-control">
                                            <button type="button" class="qty-btn" data-id="@item.MedicineId" data-price="@item.UnitPrice" data-change="-1">-</button>
                                            <input id="qty-@item.MedicineId" type="text" value="@item.Quantity" readonly>
                                            <button type="button" class="qty-btn" data-id="@item.MedicineId" data-price="@item.UnitPrice" data-change="1">+</button>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="price-text" id="total-@item.MedicineId">@((item.UnitPrice * item.Quantity).ToString("C"))</span>
                                    </td>
                                    <td>
                                        <form asp-action="Remove" asp-controller="Cart" method="post">
                                            <input type="hidden" name="id" value="@item.Id" />
                                            <button type="submit" class="remove-btn">
                                                <i class="fa-solid fa-trash"></i>
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <a asp-controller="Home" asp-action="Index" class="btn btn-outline-primary continue-shopping">
                        <i class="fas fa-arrow-left me-1"></i> Continue Shopping
                    </a>
                </div>

                <div class="col-lg-4">
                    <div class="summary-card">
                        <h4><i class="fas fa-receipt me-2"></i> Order Summary</h4>
                        <div class="summary-item">
                            <span>Subtotal (@Model.Count items)</span>
                            <span id="subtotal">@subTotal.ToString("C")</span>
                        </div>
                        <div class="summary-item">
                            <span>Delivery</span>
                            <span id="delivery-fee">@deliveryFee.ToString("C")</span>
                        </div>
                        <div class="summary-item">
                            <span>Discount</span>
                            <span class="text-success" id="discount">-@discount.ToString("C")</span>
                        </div>
                        <div class="summary-total">
                            <span>Total</span>
                            <span id="total">@total.ToString("C")</span>
                        </div>
                        @if (User.Identity != null && User.Identity.IsAuthenticated)
                        {
                            <!-- ✅ لو المستخدم عامل Login اعرض زرار الدفع -->
                            <form asp-controller="Payment" asp-action="CreateCheckout" method="post">
                                <button type="submit" class="checkout-btn">
                                    <i class="fas fa-lock me-2"></i> Proceed to Checkout
                                </button>
                            </form>
                        }
                        else
                        {
                            <!-- ❌ لو مش عامل Login رجّعه للـ Login Page -->
                            <a asp-controller="Account" asp-action="Login" class="checkout-btn d-inline-block text-center">
                                <i class="fas fa-sign-in-alt me-2"></i> Please Login to Checkout
                            </a>
                        }

                        <p class="secure-text"><i class="fas fa-shield-alt me-1"></i> Secure Payment • SSL Encrypted</p>
                    </div>
                </div>
            </div>

            <!-- Features -->
            <div class="row features-row">
                <div class="col-md-4 mb-4">
                    <div class="feature-card">
                        <i class="fas fa-truck"></i>
                        <h6>Fast Delivery</h6>
                        <p>Delivery within 24 hours for all orders</p>
                    </div>
                </div>
                <div class="col-md-4 mb-4">
                    <div class="feature-card">
                        <i class="fas fa-tags"></i>
                        <h6>Exclusive Discounts</h6>
                        <p>Enjoy discounts on premium products</p>
                    </div>
                </div>
                <div class="col-md-4 mb-4">
                    <div class="feature-card">
                        <i class="fas fa-headset"></i>
                        <h6>Health Support</h6>
                        <p>Medical support team available 24/7</p>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="empty-cart">
                <i class="fas fa-shopping-cart"></i>
                <h4>Your cart is empty</h4>
                <p>You haven't added any products to your cart yet</p>
                <a asp-controller="Home" asp-action="Index" class="btn btn-primary">
                    <i class="fas fa-arrow-left me-1"></i> Continue Shopping
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Function to update the order summary
        function updateOrderSummary() {
            let subtotal = 0;

            // Calculate new subtotal from all items
            document.querySelectorAll('[id^="total-"]').forEach(element => {
                // Extract the numeric value from the currency string
                const totalText = element.textContent;
                const totalValue = parseFloat(totalText.replace(/[^\d.-]/g, ''));
                subtotal += totalValue;
            });

            // Update the subtotal display
            document.getElementById('subtotal').textContent = '$' + subtotal.toFixed(2);

            // Calculate new total
            const deliveryFee = parseFloat(document.getElementById('delivery-fee').textContent.replace(/[^\d.-]/g, ''));
            const discount = parseFloat(document.getElementById('discount').textContent.replace(/[^\d.-]/g, ''));
            const total = subtotal + deliveryFee - Math.abs(discount);

            // Update the total display
            document.getElementById('total').textContent = '$' + total.toFixed(2);
        }

        // Add event listeners to quantity buttons
        document.querySelectorAll(".qty-btn").forEach(btn => {
            btn.addEventListener("click", function () {
                const productId = this.dataset.id;
                const price = parseFloat(this.dataset.price);
                const change = parseInt(this.dataset.change);
                const qtyInput = document.getElementById(`qty-${productId}`);
                let currentQty = parseInt(qtyInput.value);

                // Ensure quantity doesn't go below 1
                if (currentQty + change < 1) return;

                currentQty = currentQty + change;
                qtyInput.value = currentQty;

                // Calculate new total for this item
                const newTotal = price * currentQty;
                document.getElementById(`total-${productId}`).textContent = '$' + newTotal.toFixed(2);

                // Update the order summary
                updateOrderSummary();

                // Send AJAX request to update server
                fetch("/Cart/UpdateQuantity", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ productId: productId, quantity: currentQty })
                })
                .then(res => {
                    if (!res.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return res.json();
                })
                .then(data => {
                    // Server returned updated values, use them
                    if (data && data.subtotal && data.total) {
                        document.getElementById("subtotal").textContent = data.subtotal;
                        document.getElementById("total").textContent = data.total;
                    }
                })
                .catch(err => {
                    console.error("Error updating cart:", err);
                    // If there's an error, we'll keep the client-side calculation
                });
            });
        });

        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            // Any initialization code if needed
        });
    </script>
}